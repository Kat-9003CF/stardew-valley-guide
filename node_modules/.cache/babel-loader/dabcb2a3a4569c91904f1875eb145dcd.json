{"ast":null,"code":"var _jsxFileName = \"/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Calendar.css\";\nimport seasonsData from './SeasonsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  showEvents(chosenSeason[\"dates\"]);\n});\n\nfunction Calendar() {\n  _s();\n\n  const [seasons, setSeasons] = useState(seasonsData);\n  const [chosenSeason, setChosenSeason] = useState(seasons[0]);\n\n  function handleChange(event) {\n    let seasonName = event.target.value;\n    let newSeason = seasons.find(s => s.name === seasonName);\n    setChosenSeason(newSeason);\n  }\n\n  function showEvents(dates) {\n    let eventsDisplay = [];\n\n    for (let date of dates) {\n      eventsDisplay.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"images/flag.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 28\n      }, this));\n      eventsDisplay.push(date);\n    }\n\n    return eventsDisplay;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: chosenSeason['name'],\n      src: chosenSeason['img']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: seasons.name,\n      value: seasons.name,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Spring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Summer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Fall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Winter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: eventsDisplay.map(e => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Calendar, \"hQksz1Kjt+3lfPtoyrBqDMV0my4=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Calendar.js"],"names":["React","useEffect","useState","seasonsData","showEvents","chosenSeason","Calendar","seasons","setSeasons","setChosenSeason","handleChange","event","seasonName","target","value","newSeason","find","s","name","dates","eventsDisplay","date","push","map","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEAF,SAAS,CAAC,MACV;AACEG,EAAAA,UAAU,CAACC,YAAY,CAAC,OAAD,CAAb,CAAV;AACD,CAHQ,CAAT;;AAKA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACC,WAAD,CAAtC;AACA,QAAM,CAACE,YAAD,EAAeI,eAAf,IAAkCP,QAAQ,CAACK,OAAO,CAAC,CAAD,CAAR,CAAhD;;AAEJ,WAASG,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAIC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACA,QAAIC,SAAS,GAAGR,OAAO,CAACS,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAUN,UAA5B,CAAhB;AACAH,IAAAA,eAAe,CAACM,SAAD,CAAf;AACC;;AAED,WAASX,UAAT,CAAoBe,KAApB,EAA0B;AACxB,QAAIC,aAAa,GAAE,EAAnB;;AACA,SAAK,IAAIC,IAAT,IAAiBF,KAAjB,EAAuB;AACrBC,MAAAA,aAAa,CAACE,IAAd,eAAmB;AAAK,QAAA,GAAG,EAAG;AAAX;AAAA;AAAA;AAAA;AAAA,cAAnB;AACAF,MAAAA,aAAa,CAACE,IAAd,CAAmBD,IAAnB;AACD;;AACD,WAAOD,aAAP;AACH;;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAIf,YAAY,CAAC,MAAD,CAAxB;AAAkC,MAAA,GAAG,EAAIA,YAAY,CAAC,KAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,IAAI,EAAEE,OAAO,CAACW,IAAtB;AAA4B,MAAA,KAAK,EAAEX,OAAO,CAACW,IAA3C;AAAiD,MAAA,QAAQ,EAAER,YAA3D;AAAA,8BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAO,MAAA,SAAS,EAAG,QAAnB;AAAA,8BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACGU,aAAa,CAACG,GAAd,CAAkBC,CAAC,iBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA5CMlB,Q;;KAAAA,Q;AA8CP,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Calendar.css\";\nimport seasonsData from './SeasonsData';\n\nuseEffect(() =>\n{\n  showEvents(chosenSeason[\"dates\"])\n})\n\nfunction Calendar() {\n    const [seasons, setSeasons] = useState(seasonsData);\n    const [chosenSeason, setChosenSeason] = useState(seasons[0])\n\nfunction handleChange(event) {\n    let seasonName = event.target.value;\n    let newSeason = seasons.find(s => s.name ===seasonName)\n    setChosenSeason(newSeason);\n    }\n\n    function showEvents(dates){\n      let eventsDisplay =[];\n      for (let date of dates){\n        eventsDisplay.push(<img src = 'images/flag.gif'></img>)\n        eventsDisplay.push(date);\n      }\n      return eventsDisplay;\n  }\n    \n    return (\n      <div className=\"Calendar\">\n        <h2>Calendar</h2>\n        <img alt = {chosenSeason['name']} src = {chosenSeason['img']} />\n\n        <select name={seasons.name} value={seasons.name} onChange={handleChange}>\n                <option>Spring</option>\n                <option>Summer</option>\n                <option>Fall</option>\n                <option>Winter</option>\n        </select>\n\n        <table className = 'events'>\n          <thead>\n            <td>Events</td>\n          </thead>\n          <tbody>\n            {eventsDisplay.map(e => (\n              <td>e</td>\n            ))}\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n  \n  export default Calendar;"]},"metadata":{},"sourceType":"module"}