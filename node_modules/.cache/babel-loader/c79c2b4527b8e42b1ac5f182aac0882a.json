{"ast":null,"code":"var _jsxFileName = \"/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Bundles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Bundles.css\";\nimport bundlesData from './BundlesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BundlesList() {\n  _s();\n\n  const [bundles, setBundles] = useState(bundlesData);\n\n  const markComplete = name => {\n    let updatedBundle = [...bundles];\n    let ix = updatedBundle.findIndex(b => b.name === name);\n    updatedBundle[ix].collected = !updatedBundle[ix].collected;\n    setBundles(bundles => [...updatedBundle]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bundles Checklists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Spring\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [bundles.map(b => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: b.collected ? \"collected\" : null,\n            children: b.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => markComplete(b.name),\n              children: \"Collected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 1\n  }, this);\n}\n\n_s(BundlesList, \"yGLEsBz7yB4OP9a7QhgCFjHJlUc=\");\n\n_c = BundlesList;\nexport default BundlesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BundlesList\");","map":{"version":3,"sources":["/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Bundles.js"],"names":["React","useState","bundlesData","BundlesList","bundles","setBundles","markComplete","name","updatedBundle","ix","findIndex","b","collected","map","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,SAASC,WAAT,GAAsB;AAAA;;AAEtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAACC,WAAD,CAAtC;;AAEA,QAAMI,YAAY,GAAIC,IAAD,IAAU;AAC3B,QAAIC,aAAa,GAAG,CAAC,GAAGJ,OAAJ,CAApB;AACA,QAAIK,EAAE,GAAGD,aAAa,CAACE,SAAd,CAAwBC,CAAC,IAAIA,CAAC,CAACJ,IAAF,KAAWA,IAAxC,CAAT;AACAC,IAAAA,aAAa,CAACC,EAAD,CAAb,CAAkBG,SAAlB,GAA6B,CAACJ,aAAa,CAACC,EAAD,CAAb,CAAkBG,SAAhD;AACAP,IAAAA,UAAU,CAACD,OAAO,IAAG,CAAC,GAAGI,aAAJ,CAAX,CAAV;AACD,GALH;;AAQA,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAG,QAAnB;AAAA,6BACI;AAAA,mBACCJ,OAAO,CAACS,GAAR,CAAYF,CAAC,iBACV;AAAA,kCACI;AAAI,YAAA,SAAS,EAAEA,CAAC,CAACC,SAAF,GAAc,WAAd,GAA4B,IAA3C;AAAA,sBAAkDD,CAAC,CAACJ;AAApD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAI;AAAQ,cAAA,OAAO,EAAIO,CAAD,IAAOR,YAAY,CAACK,CAAC,CAACJ,IAAH,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CADD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmBC;;GA/BQJ,W;;KAAAA,W;AAiCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Bundles.css\";\nimport bundlesData from './BundlesData';\n\n\nfunction BundlesList(){\n\nconst [bundles, setBundles] = useState(bundlesData);\n\nconst markComplete = (name) => {\n    let updatedBundle = [...bundles];\n    let ix = updatedBundle.findIndex(b => b.name === name);\n    updatedBundle[ix].collected= !updatedBundle[ix].collected;\n    setBundles(bundles=> [...updatedBundle])\n  }\n\n\nreturn (\n<div>\n    <h2>Bundles Checklists</h2>\n    <table className = 'Spring'>\n        <tbody>\n        {bundles.map(b => (\n            <tr>\n                <td className={b.collected ? \"collected\" : null}>{b.name}</td>\n                <td><button onClick= {(e) => markComplete(b.name)}>Collected</button></td>\n            </tr>\n            ))};\n        </tbody>\n    </table>\n</div>\n\n\n\n\n)\n}                \n\nexport default BundlesList;"]},"metadata":{},"sourceType":"module"}