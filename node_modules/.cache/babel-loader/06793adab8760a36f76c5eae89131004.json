{"ast":null,"code":"var _jsxFileName = \"/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Calendar.css\";\nimport seasonsData from './SeasonsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const [seasons, setSeasons] = useState(seasonsData);\n  const [chosenSeason, setChosenSeason] = useState(seasons[0]);\n\n  function handleChange(event) {\n    let seasonName = event.target.value;\n    let newSeason = seasons.find(s => s.name === seasonName);\n    setChosenSeason(newSeason);\n  }\n\n  function showEvents(dates) {\n    let eventsDisplay = [];\n\n    for (let i = 0; i < dates.length; i++) {\n      if (dates[i] === '15 - 17 - Night Market') {\n        dates.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/star.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 22\n        }, this));\n        dates.push(dates[i]);\n      } else {\n        dates.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/flag.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }, this));\n        dates.push(dates[i]);\n      }\n    }\n\n    return eventsDisplay;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: chosenSeason['name'],\n      src: chosenSeason['img']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: seasons.name,\n      value: seasons.name,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Spring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Summer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Fall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Winter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: chosenSeason[\"dates\"] && showEvents(chosenSeason[\"dates\"])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Calendar, \"hQksz1Kjt+3lfPtoyrBqDMV0my4=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Calendar.js"],"names":["React","useState","seasonsData","Calendar","seasons","setSeasons","chosenSeason","setChosenSeason","handleChange","event","seasonName","target","value","newSeason","find","s","name","showEvents","dates","eventsDisplay","i","length","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAACC,WAAD,CAAtC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACG,OAAO,CAAC,CAAD,CAAR,CAAhD;;AAEJ,WAASI,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAIC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACA,QAAIC,SAAS,GAAGT,OAAO,CAACU,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAUN,UAA5B,CAAhB;AACAH,IAAAA,eAAe,CAACM,SAAD,CAAf;AACC;;AAED,WAASI,UAAT,CAAoBC,KAApB,EAA0B;AACxB,QAAIC,aAAa,GAAE,EAAnB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,KAAK,CAACG,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,UAAIF,KAAK,CAACE,CAAD,CAAL,KAAa,wBAAjB,EAA0C;AACxCF,QAAAA,KAAK,CAACI,IAAN,eAAW;AAAK,UAAA,GAAG,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAAX;AACAJ,QAAAA,KAAK,CAACI,IAAN,CAAWJ,KAAK,CAACE,CAAD,CAAhB;AACD,OAHD,MAIK;AACLF,QAAAA,KAAK,CAACI,IAAN,eAAW;AAAK,UAAA,GAAG,EAAG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAAX;AACAJ,QAAAA,KAAK,CAACI,IAAN,CAAWJ,KAAK,CAACE,CAAD,CAAhB;AACD;AAEF;;AAAA,WAAOD,aAAP;AACF;;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAIb,YAAY,CAAC,MAAD,CAAxB;AAAkC,MAAA,GAAG,EAAIA,YAAY,CAAC,KAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,IAAI,EAAEF,OAAO,CAACY,IAAtB;AAA4B,MAAA,KAAK,EAAEZ,OAAO,CAACY,IAA3C;AAAiD,MAAA,QAAQ,EAAER,YAA3D;AAAA,8BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAA,8BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACGF,YAAY,CAAC,OAAD,CAAZ,IAAwBW,UAAU,CAACX,YAAY,CAAC,OAAD,CAAb;AADrC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAhDMH,Q;;KAAAA,Q;AAkDP,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Calendar.css\";\nimport seasonsData from './SeasonsData';\n\nfunction Calendar() {\n    const [seasons, setSeasons] = useState(seasonsData);\n    const [chosenSeason, setChosenSeason] = useState(seasons[0])\n\nfunction handleChange(event) {\n    let seasonName = event.target.value;\n    let newSeason = seasons.find(s => s.name ===seasonName)\n    setChosenSeason(newSeason);\n    }\n\n    function showEvents(dates){\n      let eventsDisplay =[];\n      for (let i=0; i<dates.length; i++){\n        if (dates[i] === '15 - 17 - Night Market'){\n          dates.push(<img src ='images/star.png'/>)\n          dates.push(dates[i]);\n        }\n        else {\n        dates.push(<img src = 'images/flag.gif'></img>)\n        dates.push(dates[i]);\n      }\n      \n    }return eventsDisplay;\n  }\n    \n    return (\n      <div className=\"Calendar\">\n        <h2>Calendar</h2>\n        <img alt = {chosenSeason['name']} src = {chosenSeason['img']} />\n\n        <select name={seasons.name} value={seasons.name} onChange={handleChange}>\n                <option>Spring</option>\n                <option>Summer</option>\n                <option>Fall</option>\n                <option>Winter</option>\n        </select>\n\n        <table>\n          <thead>\n            <td>Events</td>\n          </thead>\n          <tbody>\n            {chosenSeason[\"dates\"] &&showEvents(chosenSeason[\"dates\"])}\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n  \n  export default Calendar;"]},"metadata":{},"sourceType":"module"}