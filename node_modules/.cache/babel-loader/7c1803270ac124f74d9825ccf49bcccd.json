{"ast":null,"code":"var _jsxFileName = \"/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Calendar.css\";\nimport seasonsData from './SeasonsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const [seasons, setSeasons] = useState(seasonsData);\n  const [chosenSeason, setChosenSeason] = useState(seasons[0]);\n\n  function handleChange(event) {\n    let seasonName = event.target.value;\n    let newSeason = seasons.find(s => s.name === seasonName);\n    setChosenSeason(newSeason);\n  }\n\n  function showEvents(dates) {\n    let eventDisplay = [];\n\n    for (date of dates) {\n      if (date === '15-17 - Night Market') {\n        eventDisplay.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/star.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this));\n        eventDisplay.push(date);\n      } else {\n        eventDisplay.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/flag.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this));\n        eventDisplay.push(date);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: chosenSeason['name'],\n      src: chosenSeason['img']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: seasons.name,\n      value: seasons.name,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Spring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Summer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Fall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Winter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events\",\n      children: showEvents(chosenSeason[\"dates\"])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Calendar, \"hQksz1Kjt+3lfPtoyrBqDMV0my4=\");\n\n_c = Calendar;\n;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/kat/Documents/CodeOp/MVP/stardew-valley-guide/src/components/Calendar.js"],"names":["React","useEffect","useState","seasonsData","Calendar","seasons","setSeasons","chosenSeason","setChosenSeason","handleChange","event","seasonName","target","value","newSeason","find","s","name","showEvents","dates","eventDisplay","date","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAACC,WAAD,CAAtC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACG,OAAO,CAAC,CAAD,CAAR,CAAhD;;AAEJ,WAASI,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAIC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACA,QAAIC,SAAS,GAAGT,OAAO,CAACU,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAUN,UAA5B,CAAhB;AACAH,IAAAA,eAAe,CAACM,SAAD,CAAf;AACC;;AAEL,WAASI,UAAT,CAAoBC,KAApB,EAA0B;AACxB,QAAIC,YAAY,GAAE,EAAlB;;AACA,SAAKC,IAAL,IAAaF,KAAb,EAAmB;AACjB,UAAIE,IAAI,KAAG,sBAAX,EAAkC;AAChCD,QAAAA,YAAY,CAACE,IAAb,eAAkB;AAAK,UAAA,GAAG,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAAlB;AACAF,QAAAA,YAAY,CAACE,IAAb,CAAkBD,IAAlB;AACD,OAHD,MAIK;AACHD,QAAAA,YAAY,CAACE,IAAb,eAAkB;AAAK,UAAA,GAAG,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAAlB;AACAF,QAAAA,YAAY,CAACE,IAAb,CAAkBD,IAAlB;AACD;AACF;AACF;;AAEG,sBAGE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAId,YAAY,CAAC,MAAD,CAAxB;AAAkC,MAAA,GAAG,EAAIA,YAAY,CAAC,KAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,IAAI,EAAEF,OAAO,CAACY,IAAtB;AAA4B,MAAA,KAAK,EAAEZ,OAAO,CAACY,IAA3C;AAAiD,MAAA,QAAQ,EAAER,YAA3D;AAAA,8BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYA;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA,gBACGS,UAAU,CAACX,YAAY,CAAC,OAAD,CAAb;AADb;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAuBD;;GA/CMH,Q;;KAAAA,Q;AA+CN;AAED,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Calendar.css\";\nimport seasonsData from './SeasonsData';\n\n\nfunction Calendar() {\n    const [seasons, setSeasons] = useState(seasonsData);\n    const [chosenSeason, setChosenSeason] = useState(seasons[0])\n\nfunction handleChange(event) {\n    let seasonName = event.target.value;\n    let newSeason = seasons.find(s => s.name ===seasonName)\n    setChosenSeason(newSeason);\n    }\n\nfunction showEvents(dates){\n  let eventDisplay =[];\n  for (date of dates){\n    if (date==='15-17 - Night Market'){\n      eventDisplay.push(<img src ='images/star.png'></img>)\n      eventDisplay.push(date)\n    }\n    else {\n      eventDisplay.push(<img src ='images/flag.gif'></img>)\n      eventDisplay.push(date)\n    }\n  }\n}\n    \n    return (\n    \n\n      <div className=\"Calendar\">\n        <h2>Calendar</h2>\n        <img alt = {chosenSeason['name']} src = {chosenSeason['img']} />\n\n        <select name={seasons.name} value={seasons.name} onChange={handleChange}>\n                <option>Spring</option>\n                <option>Summer</option>\n                <option>Fall</option>\n                <option>Winter</option>\n        </select>\n\n        <h2>Events</h2>\n      <div className= \"events\">\n        {showEvents(chosenSeason[\"dates\"])}\n\n\n      </div>\n\n    </div>\n    )\n  };\n  \n  export default Calendar;"]},"metadata":{},"sourceType":"module"}